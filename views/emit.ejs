<!DOCTYPE html>
<html lang="en">

<head>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"
        integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script type="text/javascript" src="/socket.io/socket.io.js"></script>
</head>

<body>
    <div>
        <video src="" id="video" style="width:700px; height: 350px;" autoplay="true"></video>
    </div>
    <div>
        <button id="button-start">Start Streaming</button>
        <button id="button-stop">Stop Streaming</button>
    </div>

    <canvas style="display:none;" id="preview"></canvas>
    <div id="logger"></div>
</body>
<script type="text/javascript">
    var canvas = document.getElementById("preview");
    var context = canvas.getContext('2d');
    canvas.width = 900;
    canvas.height = 700;
    context.width = canvas.width;
    context.height = canvas.height;

    var video = document.getElementById("video");
    var buttonStart = document.getElementById("button-start");
    var buttonStop = document.getElementById("button-stop");

    var socket = io();

    const User = prompt('Enter Your Name');
    var localstream;
    var interval;
    if (User) {

        function logger(msg) {
            $('#logger').text(msg);
        }

        function loadCamera(stream) {
            try {
                localstream = stream;
                video.srcObject = stream;
            } catch (error) {
                video.src = URL.createObjectURL(stream);
            }
            logger("Camera connected");
        }

        function loadFail() {
            logger("Camera not connected");
        }

        function viewVideo(video, context) {
            context.drawImage(video, 0, 0, context.width, context.height);
            socket.emit('stream', canvas.toDataURL('image/webp'));
        }

        buttonStart.addEventListener('click', function () {
            socket.emit('host-connect', User);
            navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msgGetUserMedia);
            if (navigator.getUserMedia) {
                navigator.getUserMedia({ video: true, audio: false }, loadCamera, loadFail);
            }
            interval = setInterval(function () {
                viewVideo(video, context);
            }, 1);
        })

        buttonStop.addEventListener('click', function () {
            video.pause();
            video.src = "";
            // const tracks = localstream.getTracks();

            // tracks[0].stop;
            localstream.getTracks().forEach(function (track) {
                track.stop();
            });
            clearInterval(interval);
            // localstream.stop()
            socket.emit('host-disconnect', User);
        })

        // $(function () {

        //     navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msgGetUserMedia);
        //     if (navigator.getUserMedia) {
        //         navigator.getUserMedia({ video: true, audio: false }, loadCamera, loadFail);
        //     }
        //     setInterval(function () {
        //         viewVideo(video, context);
        //     }, 5);

        // });
    }

</script>

</html>